func returns10() {
    return 10;
}

func maths() {
    return 10 / 3.333 > 2.5;
}

func add(a, b) {
    return a + b;
}

func fibonacci(n) {
    if n <= 1 {
        return n;
    } else {
        return fibonacci(n - 1) + fibonacci(n - 2);
    }
}

func main() {
    // integer math
    assert(10 + 10 == 20);
    assert(10 - 10 == 0);
    assert(10 * 3 == 30);
    assert(10 / 2 == 5);
    
    // float math
    assert(10.0 + 10.0 == 20.0);
    assert(10.0 - 10.0 == 0.0);
    assert(10.0 * 3.0 == 30.0);
    assert(10.0 / 2.0 == 5.0);

    // integer-float math
    assert(10 + 10.0 == 20.0);
    assert(10 - 10.0 == 0.0);
    assert(10 * 3.0 == 30.0);
    assert(10 / 2.0 == 5.0);

    // float-integer math
    assert(10.0 + 10 == 20.0);
    assert(10.0 - 10 == 0.0);
    assert(10.0 * 3 == 30.0);
    assert(10.0 / 2 == 5.0);

    // integer comparisons
    assert(0 == 0);
    assert(1 > 0);
    assert(0 < 1);
    assert(1 >= 0);
    assert(1 >= 1);
    assert(0 <= 1);
    assert(1 <= 1);

    // float comparisons
    assert(10.0 == 10.0);
    assert(11.0 > 10.0);
    assert(10.0 < 11.0);
    assert(11.0 >= 10.0);
    assert(11.0 >= 11.0);
    assert(10.0 <= 11.0);
    assert(11.0 <= 11.0);

    assert(returns10() == 10);
    assert(maths());
    assert(add(10, 10) == 20);
    assert(fibonacci(10) == 55);

    let a = 0;
    if a == 0 {
        a = 10;
    } else {
        a = 11;
    }
    assert(a == 10);

    let b = 0;
    if b != 0 {
        b = 10;
    } else {
        b = 11;
    }
    assert(b == 11);

    let c = 0;
    while c < 10 {
        c = c + 1;
    }
    assert(c == 10);
}